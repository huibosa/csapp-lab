.pos 0
  irmovq stack,%rsp
  call main
  halt

.align 8
# Source block
src:
  .quad 0x00a
  .quad 0x0b0
  .quad 0xc00

# Destination block
dest:
  .quad 0x111
  .quad 0x222
  .quad 0x333



main:
  irmovq src,%rdi
  irmovq dest,%rsi
  irmovq $3,%rdx
  call copy_block
  ret



copy_block:
  irmovq $1,%r8    # Constant 1
  xorq %rax,%rax   # result = 0
  andq %rdx,%rdx
  jmp test

loop:
  mrmovq (%rdi),%rcx
  addq %r8,%rdi          # val = *src++

  rmmovq %rcx,(%rsi)
  addq %r8,%rsi          # *dest++ = val

  xorq %rcx,%rax        # result ^= val
  subq %r8,%rdx

test:
  jne loop
  ret


.pos 0x200
stack:
