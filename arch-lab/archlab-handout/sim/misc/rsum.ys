.pos 0
  irmovq stack,%rsp
  call main
  halt

# Sample linked list
.align 8
ele1:
  .quad 0x00a
  .quad ele2
ele2:
  .quad 0x0b0
  .quad ele3
ele3:
  .quad 0xc00
  .quad 0

main:
  irmovq ele1,%rdi
  call rsum_list                    # rsum_list(ele1)
  ret

# long rsum_list(list_ptr ls)
# start in %rdi
rsum_list:
  pushq %rbx              # Callee saved registers
  xorq %rax,%rax          # val = 0
  andq %rdi,%rdi
  je end

  mrmovq (%rdi),%rbx      # val = ls->val

  mrmovq $8(%rdi), %rdi
  call rsum_list
  addq %rbx,%rax

end:
  popq %rbx
  ret

.pos 0x200
stack:
